@model OrderModel
@foreach (var item in Model.OrderShippings)
{
    @Html.Partial("_OrderDetails.ShippingItem", item)
    if (Model.OrderShippings.IndexOf(item) < (Model.OrderShippings.Count - 1))
    {
        <hr />
    }
}
@Html.HiddenFor(m=>m.CurrentOrderShippingIdEdit)
@Html.HiddenFor(m=>m.CurrentShippingMethodEdit)
<script type="text/javascript">
    $(document).ready(function() {
        var orderShippingIds = @(Model.OrderShippingIdsJson);
        for (var i = 0; i < orderShippingIds.length; i++) {
            toggleEditShippingMethod(orderShippingIds[i], false);
            initShipmentsGrid('#shipments-grid_' + orderShippingIds[i], orderShippingIds[i]);
        }
    });

    function toggleEditShippingMethod(itemIndexId, editmode) {
        if (editmode) {
            $('#lblShippingMethod_' + itemIndexId).hide();
            $('#divShippingMethod_' + itemIndexId).show();
            $('#btnEditShippingMethod_' + itemIndexId).hide();
            $('#btnSaveShippingMethod_' + itemIndexId).show();
            $('#btnCancelShippingMethod_' + itemIndexId).show();
        } else {
            $('#lblShippingMethod_' + itemIndexId).show();
            $('#divShippingMethod_' + itemIndexId).hide();
            $('#btnEditShippingMethod_' + itemIndexId).show();
            $('#btnSaveShippingMethod_' + itemIndexId).hide();
            $('#btnCancelShippingMethod_' + itemIndexId).hide();
        }
    }

    function initShipmentsGrid(gridId, orderShippingId) {
        $(gridId).kendoGrid({
            dataSource: {
                type: "json",
                transport: {
                    read: {
                        url: "/Admin/Order/ShipmentsByOrderShipping?orderShippingId=" + orderShippingId,
                        type: "POST",
                        dataType: "json",
                        data: addAntiForgeryToken
                    }
                },
                schema: {
                    data: "Data",
                    total: "Total",
                    errors: "Errors"
                },
                error: function(e) {
                    display_kendoui_grid_error(e);
                    // Cancel the changes
                    this.cancelChanges();
                },
                serverPaging: true,
                serverFiltering: true,
                serverSorting: true
            },
            pageable: {
                refresh: true,
                numeric: false,
                previousNext: false,
                info: false
            },
            //details grid
            detailInit: detailInit,
            scrollable: false,
            columns: [
            {
                field: "Id",
                title: "@T("Admin.Orders.Shipments.ID")",
                width: 50
    }, {
    field: "OrderId",
        title: "@T("Admin.Orders.Shipments.OrderID")",
    width: 100
    }, {
        field: "TrackingNumber",
        title: "@T("Admin.Orders.Shipments.TrackingNumber")",
        width: 100
    }, {
    field: "TotalWeight",
        title: "@T("Admin.Orders.Shipments.TotalWeight")",
    width: 100
    }, {
        field: "ShippedDate",
        title: "@T("Admin.Orders.Shipments.ShippedDate")",
        width: 200,
        type: "date",
        format: "{0:G}"
    }, {
    field: "DeliveryDate",
        title: "@T("Admin.Orders.Shipments.DeliveryDate")",
    width: 200,
    type: "date",
    format: "{0:G}"
    }, {
        field: "Id",
        title: "@T("Admin.Common.View")",
        width: 50,
        template: '<a href="@Url.Content("~/Admin/Order/ShipmentDetails/")#=Id#">@T("Admin.Common.View")</a>'
    }
    ]
    });
    }

    //details grid
    function detailInit(e) {
        $("<div/>").appendTo(e.detailCell).kendoGrid({
            dataSource: {
                type: "json",
                transport: {
                    read: {
                        url: "@Html.Raw(Url.Action("ShipmentsItemsByShipmentId", "Order"))?shipmentId=" + e.data.Id,
                    type: "POST",
                    dataType: "json",
                    data: addAntiForgeryToken
                }
            },
            schema: {
                data: "Data",
                total: "Total",
                errors: "Errors"
            },
            error: function(e) {
                display_kendoui_grid_error(e);
                // Cancel the changes
                this.cancelChanges();
            },
            serverPaging: true,
            serverFiltering: true,
            serverSorting: true
        },
            scrollable: false,
        sortable: true,
        pageable: {
            refresh: true,
            numeric: false,
            previousNext: false,
            info: false
        },
        columns: [
            {
                field: "ProductName",
                title: "@T("Admin.Orders.Shipments.Products.ProductName")",
                width: 400
    }, {
    field: "ShippedFromWarehouse",
        title: "@T("Admin.Orders.Shipments.Products.Warehouse")",
    width: 150
    }, {
        field: "QuantityInThisShipment",
        title: "@T("Admin.Orders.Shipments.Products.QtyShipped")",
        width: 150
    }, {
    field: "ItemWeight",
        title: "@T("Admin.Orders.Shipments.Products.ItemWeight")",
    width: 150
    }, {
        field: "ItemDimensions",
        title: "@T("Admin.Orders.Shipments.Products.ItemDimensions")",
        width: 150
    }
    ]
    });
    }

    function submitEditShippingMethod(orderShippingId) {
        var result = confirm('@T("Admin.Common.AreYouSure")');
        if (result) {
            $('#CurrentOrderShippingIdEdit').val(orderShippingId);
            $('#CurrentShippingMethodEdit').val($("#current-shipping-method-" + orderShippingId).val());
        }

        return result;
    }
</script>
